# Intro

Do kompilacji kernela używa się arm-eabi toolchaina, a do kompilacji ROM-u androideabi toolchaina.

### W nowym katalogu zaczynamy
#### https://forum.xda-developers.com/chef-central/android/guide-switching-to-custom-toolchain-t2927662

### Sprawdzony UBER arm-eabi toolchain z 2016 roku
```
git clone https://bitbucket.org/UBERTC/arm-eabi-4.9.git prebuilts/gcc/linux-x86/arm/arm-linux-eabi-UB-4.9
export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/prebuilts/gcc/linux-x86/arm/arm-linux-eabi-UB-4.9/bin/arm-eabi-
```

### Sprawdzony linaro gcc 7.1 toolchain z 2017
#### https://forum.xda-developers.com/android/development/toolchains-gnu-linaro-5th-2017-t3606941
##### https://github.com/nathanchance/gcc-prebuilts
```
git clone --depth=1  https://github.com/nathanchance/gcc-prebuilts.git -b arm-linaro-7.x
export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/gcc-prebuilts/bin/arm-linaro-linux-androideabi-
```

### Kompilacja własnego kernela dla LG G3
```
git clone --depth=1 https://github.com/ppajda/kernel_g3.git -b los-15.1 g3k3rn3l
ln -sfn $(pwd)/g3k3rn3l /usr/src/linux
cd g3k3rn3l
ln -sfn  $(pwd)/include/linux/ /usr/include/linux
make clean && make mrproper && make lineageos_d855_defconfig
#poprawki w .config i następnie: make oldconfig
make clean && time make -j$(nproc --all) all

git clone git@github.com:pwasiewi/android_system_tools_dtbtool.git
cd android_system_tools_dtbtool
make

#copy dtbtool to kernel root
cp ../android_system_tools_dtbtool/dtbtool .
./dtbtool -2 -o ./arch/arm/boot/dtb -s 2048 -p ./scripts/dtc/ ./arch/arm/boot/
#git clone https://github.com/nathanchance/AnyKernel2
#najlepiej rozpakuj działający kernel bazujący na AnyKernel2
#np.https://mega.nz/#F!0mY1XS5S!EPmMJshHh6lleyK7FQ8NDg kernel LG G3 bazujący na kodzie, 
#który skompilowaliśmy https://github.com/ppajda/kernel_g3.git
#skopiuj do niego nowy zImage i dtb i ponownie spakuj
cp ./arch/arm/boot/dtb ../AnyKernel2G3/kernel_files/dtb-d855
cp ./arch/arm/boot/zImage ../AnyKernel2G3/kernel_files/zImage-d855
cd ../AnyKernel2G3
zip -r9 d855UberKernel.zip * -x .git

#w razie fastboot:
/opt/android-sdk/platform-tools/fastboot reboot bootloader

### wersja z out dla poszczególnych wersji urządzenia
mkdir -p out
make O=out clean && make O=out mrproper && make O=out lineageos_d855_defconfig
make O=out -j$(nproc --all)
```

# Inne odnosniki:
 - https://androidmodguide.blogspot.com/p/blog-page.html
 - https://groups.google.com/forum/#!topic/android-contrib/VEhnuU887YY
 - https://github.com/Artx-II/ultra_kernel_lge_g3
 - http://xdshao.com/2018/04/10/Android-exploitation-Kernel-stack-buffer-overflow/
 - https://jsteward.moe/weekly-report-0723.html
 - https://github.com/ResurrectionRemix/platform_manifest/blob/lollipop/README.mkdn
 - https://github.com/ResurrectionRemix/platform_manifest

# Inne toolchainy nie testowane

### android ndk toolchain
```
export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=/opt/android-ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-
```

### UBER androideabi toolchain (nowsza kompilacja)
#### https://forum.xda-developers.com/android/software/toolchain-uber-toolchains-t3527997
```
git clone https://bitbucket.org/matthewdalex/arm-linux-androideabi-4.9.git
```
### linaro toolchain
```
git clone -b linaro-4.8 https://github.com/ArchiDroid/Toolchain prebuilts/gcc/linux-x86/arm/arm-linux-eabi-linaro-4.8
cd ..; export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/prebuilts/gcc/linux-x86/arm/arm-linux-eabi-linaro-4.8/bin/arm-eabi- ; cd kernel_g3

```
### Google toolchain
```
git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7 prebuilts/gcc/linux-x86/arm/arm-eabi-4.7
cd ..; export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/prebuilts/gcc/linux-x86/arm/arm-eabi-4.7/bin/arm-eabi- ; cd kernel_g3
```
## UBER toolchain
```
git clone https://bitbucket.org/UBERTC/arm-linux-androideabi-4.9.git prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-UB-4.9
export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-UB-4.9/bin/arm-linux-androideabi-
#cd ..; export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=$(pwd)/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-UB-4.9/bin/arm-linux-androideabi-; cd kernel_g3
```
## snapdragon toolchain
```
wget https://developer.qualcomm.com/qfile/26662/snapdragon-llvm-6.0.2-linux64.tar.gz
#unpack to /opt/android-ndk
#go to  /opt/android-ndk/build/tools
/opt/android-ndk/build/tools/make_standalone_toolchain_snapdragon_llvm.py --arch arm --api 27 --install-dir /opt/snapdragon
export ARCH=arm && export SUBARCH=arm && export CROSS_COMPILE=/opt/snapdragon/bin/arm-linux-androideabi-
```
